use_package("ggplot2")
library(usethis)
use_package("ggplot2")
use_package("gridExtra")
use_package("INLA")
use_package("mvtnorm")
use_package("graphics")
usethis::use_rcpp_armadillo()
rlang::last_trace()
usethis::use_rcpp()
usethis::use_rcpp(SPDEcensSpatial)
usethis::use_rcpp("SPDEcensSpatial")
usethis::use_rcpp_armadillo("SPDEcensSpatial")
Rcpp::compileAttributes()
Rcpp::sourceCpp("src/Funciones.cpp")
devtools::document()
devtools::document()
rlang::last_trace(drop = FALSE)
use_package("Rdpack")
usethis::use_package("RcppCensSpatial")
# Simulated example: 10% of left-censored observations
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), runif(n))
data = rCensSp(c(-1,3), 2, 4, 0.5, x, coords, "left", 0.10, 0, "gaussian")
data = RcppCensSpatial::rCensSp(c(-1,3), 2, 4, 0.5, x, coords, "left", 0.10, 0, "gaussian")
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, 2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
data$y
data$x
x = cbind(1, rnorm(n))
data = RcppCensSpatial::rCensSp(c(-1,3), 2, 4, 0.5, x, coords, "left", 0.10, 0, "gaussian")
data$x
data$ci
data$lcl
data$ucl
coords
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, 2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
devtools::spell_check()
devtools::spell_check()
devtools::document()
devtools::check(manual=TRUE, remote=TRUE, incoming=TRUE)
install.packages("V8")
devtools::check(manual=TRUE, remote=TRUE, incoming=TRUE)
devtools::check(manual=TRUE, remote=TRUE, incoming=TRUE)
library(SPDEcensSpatial)
library("RcppCensSpatial")
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15), n, 2), 5)
x = cbind(rnorm(n), runif(n))
data = rCensSp(c(-1,3), 2, 4, 0.5, x, coords, "left", 0.10, 0, "matern", 1)
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=2,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
library("RcppCensSpatial")
library("RcppCensSpatial")
library("SPDEcensSpatial")
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15), n, 2), 5)
x = cbind(rnorm(n), runif(n))
data = rCensSp(c(-1,3), 2, 4, 0.5, x, coords, "left", 0.10, 0, "matern", 1)
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.15, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
# Example 2: censored and missing observations
set.seed(123)
n = 200
coords = round(matrix(runif(2*n,0,20),n,2), 5)
x = cbind(runif(n), rnorm(n), rexp(n))
data = rCensSp(c(1,4,-1), 2, 3, 0.50, x, coords, "left", 0.05, 0,
"matern", 3)
data$y[c(10,120)] = NA
data$ci[c(10,120)] = 1
data$ucl[c(10,120)] = Inf
fit2 = SAEM.sclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, nugget0=1, type="matern", kappa=3,
M=10, pc=0.18)
# Example 2: censored and missing observations
set.seed(123)
n = 200
coords = round(matrix(runif(2*n,0,20),n,2), 5)
x = cbind(runif(n), rnorm(n), rexp(n))
data = rCensSp(c(1,4,-1), 2, 3, 0.50, x, coords, "left", 0.05, 0,
"matern", 1)
data$y[c(10,120)] = NA
data$ci[c(10,120)] = 1
data$ucl[c(10,120)] = Inf
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=20,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
fit = SPDEsclm(data$y, data$x, data$ci, data$lcl, data$ucl, coords, phi0=2,
lower=c(0.01,0.01), upper=c(30,0.99), iedge=0.30, MaxIter=300,
M=20, pc=0.2, error=1e-4, show_se=TRUE)
fit
plot(fit)
fit2$tab
fit$tab
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), rnorm(n))
data = rCensSp(c(4,-2), 1, 3, 0.50, x, coords, "right", 0.08)
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, M=20, pc=0.18, error=1e-4, show_se=TRUE)
fit = SAEM.sclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, nugget0=1, type="exponential", M=10,
pc=0.18)
fit
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, M=20, pc=0.18, error=1e-4, show_se=TRUE)
fit
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, M=10, pc=0.18, error=1e-4, show_se=TRUE)
fit
fit = SAEM.sclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, nugget0=1, type="exponential", M=10,
pc=0.18)
fit
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), rnorm(n))
data = rCensSp(c(4,-2), 1, 3, 0.50, x, coords, "right", 0.08, "matern", 1)
data = rCensSp(c(4,-2), 1, 3, 0.50, x, coords, "right", 0, "matern", 1)
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), rnorm(n))
data = rCensSp(c(4,-2), 1, 3, 0.50, x, coords, "right", 0.08, 0, "matern", 1)
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, M=10, pc=0.18, error=1e-4, show_se=TRUE)
fit
fit = SAEM.sclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, nugget0=1, type="exponential", M=10,
pc=0.18)
fit
fit = SAEM.sclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, nugget0=1, type="matern", kappa=1, M=10,
pc=0.18)
fit
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, MaxIter=100, M=10, pc=0.18)
fit
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), rnorm(n))
data = rCensSp(c(4,-2), 1, 3, 0.50, x, coords, "right", 0.08, 0, "matern", 1)
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, MaxIter=100, M=10, pc=0.18)
fit
1/1.5
set.seed(1000)
n = 50   # Test with another values for n
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rnorm(n), rnorm(n))
data = rCensSp(c(4,-2), 2, 3, 0.50, x, coords, "right", 0.08, 0, "matern", 1)
fit = SPDEsclm(y=data$y, x=x, ci=data$ci, lcl=data$lcl, ucl=data$ucl,
coords, phi0=2, lower=c(0.01,0.01), upper=c(30,0.99),
iedge=0.30, MaxIter=100, M=10, pc=0.18)
fit
2/2.5
library("RcppCensSpatial")
library("SPDEcensSpatial")
set.seed(1000)
n = 120
coords = round(matrix(runif(2*n,0,15),n,2), 5)
x = cbind(rbinom(n,1,0.50), rnorm(n), rnorm(n))
data = rCensSp(c(1,4,-1), 2, 3, 0.50, x, coords, "left", 0.10, 20, "matern", 1)
## Estimation
data1 = data$Data
# Estimation: SAEM algorithm
fit = SPDEsclm(y=data1$y, x=data1$x, ci=data1$ci, lcl=data1$lcl,
ucl=data1$ucl, coords=data1$coords, phi0=2.5,
lower = c(0.01, 0.01), upper = c(30, 0.99), iedge = 0.3)
fit$tab
# Prediction
data2 = data$TestData
pred = predict(fit, data2$x, data2$coords)
# Cross-validation
mean((data2$y - pred$predValues)^2)
pred
devtools::check(manual=TRUE, remote=TRUE, incoming=TRUE)
library(fmesher)
use_package("fmesher")
use_readme_rmd()
library(RcppCensSpatial)
library(SPDEcensSpatial)
set.seed(12341)
n = 220
x = cbind(1, runif(n), rnorm(n))
coords = round(matrix(runif(2*n, 0, 15), n, 2), 5)
dat = rCensSp(beta=c(1,2,-1), sigma2=1, phi=4, nugget=0.50, x=x, coords=coords,
cens='left', pcens=.05, npred=20, cov.model="matern", kappa=1)
# Proportion of censoring
table(dat$Data$ci)
data1 = dat$Data
# Our model
fit1 = SPDEsclm(data1$y, data1$x, data1$ci, data1$lcl, data1$ucl, data1$coords,
phi0=3, gamma0=0.75, iedge=0.15, MaxIter=300, M=10)
fit1
# RcppCensSpatial
fit2 = SAEM.sclm(data1$y, data1$x, data1$ci, data1$lcl, data1$ucl, data1$coords,
phi0=3, nugget0=1, type="matern", kappa=1, M=10)
fit1$tab
fit1$time
build_readme()
library(usethis)
build_readme()
devtools::build_readme()
devtools::build_readme()
