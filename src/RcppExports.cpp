// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// crossdist
arma::mat crossdist(arma::mat m1);
RcppExport SEXP _SPDEcensSpatial_crossdist(SEXP m1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m1(m1SEXP);
    rcpp_result_gen = Rcpp::wrap(crossdist(m1));
    return rcpp_result_gen;
END_RCPP
}
// saemEsp
List saemEsp(arma::vec y, arma::mat X, arma::vec cc, arma::mat coords, double init_phi, double init_gamma, arma::vec lower, arma::vec upper, arma::vec lowerp, arma::vec upperp, arma::uword M, arma::uword Maxiter, double pc, double tol, List mats, bool infMat);
RcppExport SEXP _SPDEcensSpatial_saemEsp(SEXP ySEXP, SEXP XSEXP, SEXP ccSEXP, SEXP coordsSEXP, SEXP init_phiSEXP, SEXP init_gammaSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP lowerpSEXP, SEXP upperpSEXP, SEXP MSEXP, SEXP MaxiterSEXP, SEXP pcSEXP, SEXP tolSEXP, SEXP matsSEXP, SEXP infMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type init_phi(init_phiSEXP);
    Rcpp::traits::input_parameter< double >::type init_gamma(init_gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lowerp(lowerpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upperp(upperpSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Maxiter(MaxiterSEXP);
    Rcpp::traits::input_parameter< double >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type mats(matsSEXP);
    Rcpp::traits::input_parameter< bool >::type infMat(infMatSEXP);
    rcpp_result_gen = Rcpp::wrap(saemEsp(y, X, cc, coords, init_phi, init_gamma, lower, upper, lowerp, upperp, M, Maxiter, pc, tol, mats, infMat));
    return rcpp_result_gen;
END_RCPP
}
// prediccion
List prediccion(List model, List mats, arma::sp_mat Apred, arma::mat Xnew, arma::mat coordnew, arma::vec cpred);
RcppExport SEXP _SPDEcensSpatial_prediccion(SEXP modelSEXP, SEXP matsSEXP, SEXP ApredSEXP, SEXP XnewSEXP, SEXP coordnewSEXP, SEXP cpredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< List >::type mats(matsSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Apred(ApredSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnew(XnewSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coordnew(coordnewSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cpred(cpredSEXP);
    rcpp_result_gen = Rcpp::wrap(prediccion(model, mats, Apred, Xnew, coordnew, cpred));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SPDEcensSpatial_crossdist", (DL_FUNC) &_SPDEcensSpatial_crossdist, 1},
    {"_SPDEcensSpatial_saemEsp", (DL_FUNC) &_SPDEcensSpatial_saemEsp, 16},
    {"_SPDEcensSpatial_prediccion", (DL_FUNC) &_SPDEcensSpatial_prediccion, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SPDEcensSpatial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
